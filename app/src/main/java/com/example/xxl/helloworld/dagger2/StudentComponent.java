package com.example.xxl.helloworld.dagger2;

import com.example.xxl.helloworld.MainActivity;

import javax.inject.Singleton;

import dagger.Component;

/**
 * Created by xxl on 19/4/27.
 * <p>
 * Description @Component 注解作用
 *
 * 编译时 生成一个 DaggerStudentComponent 类
 *
 * // Generated by Dagger (https://google.github.io/dagger).
 * package com.example.xxl.helloworld.dagger2;
 *
 * import com.example.xxl.helloworld.MainActivity;
 * import com.example.xxl.helloworld.MainActivity_MembersInjector;
 * import dagger.internal.Preconditions;
 *
 * public final class DaggerStudentComponent implements StudentComponent {
 *   private StudentModule studentModule;
 *
 *   private DaggerStudentComponent(Builder builder) {
 *     initialize(builder);
 *   }
 *
 *   public static Builder builder() {
 *     return new Builder();
 *   }
 *
 *   @SuppressWarnings("unchecked")
 *   private void initialize(final Builder builder) {
 *     this.studentModule = builder.studentModule;
 *   }
 *
 *   @Override
 *   public void inject(MainActivity mainActivity) {
 *     injectMainActivity(mainActivity);
 *   }
 *
 *   private MainActivity injectMainActivity(MainActivity instance) {
 *     MainActivity_MembersInjector.injectMStudent(
 *         instance, StudentModule_ProvideStudentFactory.proxyProvideStudent(studentModule));
 *     return instance;
 *   }
 *
 *   public static final class Builder {
 *     private StudentModule studentModule;
 *
 *     private Builder() {}
 *
 *     public StudentComponent build() {
 *       if (studentModule == null) {
 *         throw new IllegalStateException(StudentModule.class.getCanonicalName() + " must be set");
 *       }
 *       return new DaggerStudentComponent(this);
 *     }
 *
 *     public Builder studentModule(StudentModule studentModule) {
 *       this.studentModule = Preconditions.checkNotNull(studentModule);
 *       return this;
 *     }
 *   }
 * }
 *
 *
 * 这个类似于快递员 送快递的
 *
 **/

@Singleton  // @Singleton 单例
@Component(modules = StudentModule.class)
public interface StudentComponent {
    //先注释 同一个类不能inject 2次
    //void inject(MainActivity mainActivity);
}
